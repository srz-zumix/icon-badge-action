name: Docker Build Workflow
on:
  workflow_dispatch:
    inputs:
      ref:
        type: string
        default: ""
      publish:
        type: boolean
        default: false
  workflow_call:
    inputs:
      ref:
        type: string
        default: ""
      publish:
        type: boolean
        default: false

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      tagname: ${{ steps.create_tagname.outputs.tagname }}
      semver: ${{ steps.create_tagname.outputs.semver }}
    env:
      INPUTS_REF: ${{ inputs.ref || github.head_ref || github.ref }}
    steps:
      - name: dump github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "${GITHUB_CONTEXT}"
      - name: Create tagname
        id: create_tagname
        run: |
          NAME_1=${INPUTS_REF#refs/heads/}
          NAME_2=${NAME_1#refs/tags/}
          NAME_3=${NAME_2%%/*}
          NAME=${NAME_3}
          if [ "$NAME" = "main" ]; then
            echo "tagname=latest" >> "${GITHUB_OUTPUT}"
            echo "semver=false" >> "${GITHUB_OUTPUT}"
          else
            echo "tagname=${NAME}" >> "${GITHUB_OUTPUT}"
            echo "semver=true" >> "${GITHUB_OUTPUT}"
          fi
      - run: |
          echo ${{ steps.create_tagname.outputs.tagname }}

  push_to_registries:
    runs-on: ubuntu-latest
    needs: prepare
    permissions:
      contents: read
      packages: write
    if: "${{ ! contains(needs.prepare.outputs.tagname, '/') }}"
    env:
      TAGNAME: ${{ needs.prepare.outputs.tagname }}
      REGISTRY: ghcr.io
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
      - uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=raw,value=${{ needs.prepare.outputs.tagname }},enable=true
            type=semver,value=${{ needs.prepare.outputs.tagname }},enable=${{ needs.prepare.outputs.semver == 'true' }}
            type=semver,value=${{ needs.prepare.outputs.tagname }},enable=${{ needs.prepare.outputs.semver == 'true' }},pattern=v{{major}}.{{minor}}.{{patch}}
            type=semver,value=${{ needs.prepare.outputs.tagname }},enable=${{ needs.prepare.outputs.semver == 'true' }},pattern=v{{major}}.{{minor}}
            type=semver,value=${{ needs.prepare.outputs.tagname }},enable=${{ needs.prepare.outputs.semver == 'true' }},pattern=v{{major}}
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          echo "${{ toJSON(steps.metadata.outputs) }}"
      - name: Build and Push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          file: ./docker/Dockerfile
          push: ${{ inputs.publish }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
